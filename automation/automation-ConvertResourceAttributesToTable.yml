comment: This script is used to convert CrowdStrike IOM resource attributes to a table.
commonfields:
  id: ConvertResourceAttributesToTable
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.8.0
    itemVersion: 1.12.8
    packID: CrowdStrikeFalcon
    packName: CrowdStrike Falcon
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dockerimage: demisto/python3:3.10.13.75921
engineinfo: {}
mainengineinfo: {}
name: ConvertResourceAttributesToTable
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('ConvertResourceAttributesToTable', 'start', __line__())
  ### pack version: 1.12.8




  def convert_to_table(context_results: str) -> CommandResults:
      """
      Args:
          context_results (str): String representing the data of the incident field.

      Returns:
          CommandResults: CommandResults object containing only readable_output
      """

      comment_entries = json.loads(context_results)

      md = tableToMarkdown(
          name='',
          t=comment_entries,
          headers=list(comment_entries.keys()),
          removeNull=True,
          sort_headers=False,
          headerTransform=pascalToSpace,
          is_auto_json_transform=True
      )

      return CommandResults(
          readable_output=md
      )


  def main():  # pragma: no cover
      try:
          if context := dict_safe_get(
              demisto.callingContext,
              ['context', 'Incidents', 0, 'CustomFields', 'crowdstrikefalconresourceattributes'],
              {},
          ):
              return_results(convert_to_table(context))
          else:
              return CommandResults(readable_output='No data to present')

      except Exception as e:
          demisto.error(traceback.format_exc())  # print the traceback
          return_error(str(e))


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('ConvertResourceAttributesToTable', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- dynamic-section
type: python
